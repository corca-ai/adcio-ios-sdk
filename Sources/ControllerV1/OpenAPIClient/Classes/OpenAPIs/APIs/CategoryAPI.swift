//
// CategoryAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CategoryAPI {

    /**

     - parameter parentId: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func categoryControllerFetchMany(parentId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [FetchManyCategoriesResponseDto]?, _ error: Error?) -> Void)) -> RequestTask {
        return categoryControllerFetchManyWithRequestBuilder(parentId: parentId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /categories
     - API Key:
       - type: apiKey X-Api-Key (HEADER)
       - name: api-key
     - parameter parentId: (query)  (optional)
     - returns: RequestBuilder<[FetchManyCategoriesResponseDto]> 
     */
    open class func categoryControllerFetchManyWithRequestBuilder(parentId: String? = nil) -> RequestBuilder<[FetchManyCategoriesResponseDto]> {
        let localVariablePath = "/categories"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentId": (wrappedValue: parentId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[FetchManyCategoriesResponseDto]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter upsertManyCategoryDto: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func categoryControllerUpsertMany(upsertManyCategoryDto: UpsertManyCategoryDto, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UpsertManyCategoriesResponseDto?, _ error: Error?) -> Void)) -> RequestTask {
        return categoryControllerUpsertManyWithRequestBuilder(upsertManyCategoryDto: upsertManyCategoryDto).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - PUT /categories/bulk
     - API Key:
       - type: apiKey X-Api-Key (HEADER)
       - name: api-key
     - parameter upsertManyCategoryDto: (body)  
     - returns: RequestBuilder<UpsertManyCategoriesResponseDto> 
     */
    open class func categoryControllerUpsertManyWithRequestBuilder(upsertManyCategoryDto: UpsertManyCategoryDto) -> RequestBuilder<UpsertManyCategoriesResponseDto> {
        let localVariablePath = "/categories/bulk"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: upsertManyCategoryDto)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpsertManyCategoriesResponseDto>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
