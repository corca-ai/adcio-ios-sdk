//
// Creative.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Creative: Codable, JSONEncodable, Hashable {

    public var placementFormatRatio: String?
    public var id: String
    public var mediaUrl: String
    public var width: Double?
    public var height: Double?
    public var bannerId: String?
    public var createdAt: Date
    public var updatedAt: Date
    public var deletedAt: Date?

    public init(placementFormatRatio: String?, id: String, mediaUrl: String, width: Double?, height: Double?, bannerId: String?, createdAt: Date, updatedAt: Date, deletedAt: Date?) {
        self.placementFormatRatio = placementFormatRatio
        self.id = id
        self.mediaUrl = mediaUrl
        self.width = width
        self.height = height
        self.bannerId = bannerId
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.deletedAt = deletedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case placementFormatRatio
        case id
        case mediaUrl
        case width
        case height
        case bannerId
        case createdAt
        case updatedAt
        case deletedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(placementFormatRatio, forKey: .placementFormatRatio)
        try container.encode(id, forKey: .id)
        try container.encode(mediaUrl, forKey: .mediaUrl)
        try container.encode(width, forKey: .width)
        try container.encode(height, forKey: .height)
        try container.encode(bannerId, forKey: .bannerId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encode(deletedAt, forKey: .deletedAt)
    }
}

