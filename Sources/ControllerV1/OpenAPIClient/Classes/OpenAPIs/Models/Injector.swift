//
// Injector.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Injector: Codable, JSONEncodable, Hashable {

    public var retriever: Retriever?
    public var impressionObserver: ImpressionObserver?
    public var observer: Observer?
    public var grid: GridInjector?
    public var banner: BannerInjector?
    public var append: AppendInjector?
    public var widget: WidgetInjector?

    public init(retriever: Retriever? = nil, impressionObserver: ImpressionObserver? = nil, observer: Observer? = nil, grid: GridInjector? = nil, banner: BannerInjector? = nil, append: AppendInjector? = nil, widget: WidgetInjector? = nil) {
        self.retriever = retriever
        self.impressionObserver = impressionObserver
        self.observer = observer
        self.grid = grid
        self.banner = banner
        self.append = append
        self.widget = widget
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case retriever
        case impressionObserver
        case observer
        case grid
        case banner
        case append
        case widget
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(retriever, forKey: .retriever)
        try container.encodeIfPresent(impressionObserver, forKey: .impressionObserver)
        try container.encodeIfPresent(observer, forKey: .observer)
        try container.encodeIfPresent(grid, forKey: .grid)
        try container.encodeIfPresent(banner, forKey: .banner)
        try container.encodeIfPresent(append, forKey: .append)
        try container.encodeIfPresent(widget, forKey: .widget)
    }
}

