//
// StoreSeller.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct StoreSeller: Codable, JSONEncodable, Hashable {

    public var id: String
    public var store: Client
    public var storeId: String
    public var seller: Client
    public var sellerId: String
    public var sellerIdOnStore: String
    // invitation을 ID로 간접 참조
    public var invitationId: String?
    public var createdAt: Date
    public var deletedAt: Date?

    public init(id: String, store: Client, storeId: String, seller: Client, sellerId: String, sellerIdOnStore: String, invitationId: String?, createdAt: Date, deletedAt: Date?) {
        self.id = id
        self.store = store
        self.storeId = storeId
        self.seller = seller
        self.sellerId = sellerId
        self.sellerIdOnStore = sellerIdOnStore
        self.invitationId = invitationId
        self.createdAt = createdAt
        self.deletedAt = deletedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case store
        case storeId
        case seller
        case sellerId
        case sellerIdOnStore
        case invitationId
        case createdAt
        case deletedAt
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(store, forKey: .store)
        try container.encode(storeId, forKey: .storeId)
        try container.encode(seller, forKey: .seller)
        try container.encode(sellerId, forKey: .sellerId)
        try container.encode(sellerIdOnStore, forKey: .sellerIdOnStore)
        try container.encode(invitationId, forKey: .invitationId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(deletedAt, forKey: .deletedAt)
    }
}
