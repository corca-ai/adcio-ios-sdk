//
// AdGroupWithCreditUsed.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AdGroupWithCreditUsed: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case grid = "GRID"
    }
    public enum BudgetType: String, Codable, CaseIterable {
        case dailyBudget = "DAILY_BUDGET"
        case totalBudgetInPeriod = "TOTAL_BUDGET_IN_PERIOD"
        case maxBudgetPerDay = "MAX_BUDGET_PER_DAY"
    }
    public var freeCreditUsed: Double
    public var paidCreditUsed: Double
    public var totalCreditUsed: Double
    public var id: String
    public var title: String
    public var activated: Bool
    public var type: ModelType
    public var budgetType: BudgetType
    public var maxBudgetPerDay: Double
    public var totalBudgetInPeriod: Double?
    public var startsAt: Date
    public var endsAt: Date?

    public init(freeCreditUsed: Double, paidCreditUsed: Double, totalCreditUsed: Double, id: String, title: String, activated: Bool, type: ModelType, budgetType: BudgetType, maxBudgetPerDay: Double, totalBudgetInPeriod: Double?, startsAt: Date, endsAt: Date?) {
        self.freeCreditUsed = freeCreditUsed
        self.paidCreditUsed = paidCreditUsed
        self.totalCreditUsed = totalCreditUsed
        self.id = id
        self.title = title
        self.activated = activated
        self.type = type
        self.budgetType = budgetType
        self.maxBudgetPerDay = maxBudgetPerDay
        self.totalBudgetInPeriod = totalBudgetInPeriod
        self.startsAt = startsAt
        self.endsAt = endsAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case freeCreditUsed
        case paidCreditUsed
        case totalCreditUsed
        case id
        case title
        case activated
        case type
        case budgetType
        case maxBudgetPerDay
        case totalBudgetInPeriod
        case startsAt
        case endsAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(freeCreditUsed, forKey: .freeCreditUsed)
        try container.encode(paidCreditUsed, forKey: .paidCreditUsed)
        try container.encode(totalCreditUsed, forKey: .totalCreditUsed)
        try container.encode(id, forKey: .id)
        try container.encode(title, forKey: .title)
        try container.encode(activated, forKey: .activated)
        try container.encode(type, forKey: .type)
        try container.encode(budgetType, forKey: .budgetType)
        try container.encode(maxBudgetPerDay, forKey: .maxBudgetPerDay)
        try container.encode(totalBudgetInPeriod, forKey: .totalBudgetInPeriod)
        try container.encode(startsAt, forKey: .startsAt)
        try container.encode(endsAt, forKey: .endsAt)
    }
}

