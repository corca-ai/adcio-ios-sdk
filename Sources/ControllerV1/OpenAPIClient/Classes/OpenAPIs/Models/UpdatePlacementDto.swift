//
// UpdatePlacementDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UpdatePlacementDto: Codable, JSONEncodable, Hashable {

    static let titleRule = StringRule(minLength: nil, maxLength: 255, pattern: nil)
    public var title: String?
    public var activated: Bool?
    public var minDisplayCount: Double?
    public var maxDisplayCount: Double?
    public var displayCount: Double?
    public var displayPositions: [Double]?
    public var tableSize: [Double]?
    public var productDetailDataColumns: [String]?

    public init(title: String? = nil, activated: Bool? = nil, minDisplayCount: Double? = nil, maxDisplayCount: Double? = nil, displayCount: Double? = nil, displayPositions: [Double]? = nil, tableSize: [Double]? = nil, productDetailDataColumns: [String]? = nil) {
        self.title = title
        self.activated = activated
        self.minDisplayCount = minDisplayCount
        self.maxDisplayCount = maxDisplayCount
        self.displayCount = displayCount
        self.displayPositions = displayPositions
        self.tableSize = tableSize
        self.productDetailDataColumns = productDetailDataColumns
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case activated
        case minDisplayCount
        case maxDisplayCount
        case displayCount
        case displayPositions
        case tableSize
        case productDetailDataColumns
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(activated, forKey: .activated)
        try container.encodeIfPresent(minDisplayCount, forKey: .minDisplayCount)
        try container.encodeIfPresent(maxDisplayCount, forKey: .maxDisplayCount)
        try container.encodeIfPresent(displayCount, forKey: .displayCount)
        try container.encodeIfPresent(displayPositions, forKey: .displayPositions)
        try container.encodeIfPresent(tableSize, forKey: .tableSize)
        try container.encodeIfPresent(productDetailDataColumns, forKey: .productDetailDataColumns)
    }
}

