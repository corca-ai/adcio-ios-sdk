//
// InviteSellerDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct InviteSellerDto: Codable, JSONEncodable, Hashable {

    static let licenseNumberRule = StringRule(minLength: nil, maxLength: nil, pattern: "/businessLicenseNumberRegex/")
    public var clientId: String?
    public var email: String?
    public var licenseNumber: String
    public var sellerIdOnStore: String

    public init(clientId: String? = nil, email: String? = nil, licenseNumber: String, sellerIdOnStore: String) {
        self.clientId = clientId
        self.email = email
        self.licenseNumber = licenseNumber
        self.sellerIdOnStore = sellerIdOnStore
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case clientId
        case email
        case licenseNumber
        case sellerIdOnStore
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(clientId, forKey: .clientId)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encode(licenseNumber, forKey: .licenseNumber)
        try container.encode(sellerIdOnStore, forKey: .sellerIdOnStore)
    }
}

