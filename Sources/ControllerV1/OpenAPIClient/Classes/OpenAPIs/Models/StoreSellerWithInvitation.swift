//
// StoreSellerWithInvitation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct StoreSellerWithInvitation: Codable, JSONEncodable, Hashable {

    public var invitation: SellerInvitationFlatDto?
    public var id: String
    public var storeId: String
    public var sellerId: String
    public var sellerIdOnStore: String
    public var invitationId: String?
    public var createdAt: Date
    public var deletedAt: Date?

    public init(invitation: SellerInvitationFlatDto? = nil, id: String, storeId: String, sellerId: String, sellerIdOnStore: String, invitationId: String?, createdAt: Date, deletedAt: Date?) {
        self.invitation = invitation
        self.id = id
        self.storeId = storeId
        self.sellerId = sellerId
        self.sellerIdOnStore = sellerIdOnStore
        self.invitationId = invitationId
        self.createdAt = createdAt
        self.deletedAt = deletedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case invitation
        case id
        case storeId
        case sellerId
        case sellerIdOnStore
        case invitationId
        case createdAt
        case deletedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(invitation, forKey: .invitation)
        try container.encode(id, forKey: .id)
        try container.encode(storeId, forKey: .storeId)
        try container.encode(sellerId, forKey: .sellerId)
        try container.encode(sellerIdOnStore, forKey: .sellerIdOnStore)
        try container.encode(invitationId, forKey: .invitationId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(deletedAt, forKey: .deletedAt)
    }
}

