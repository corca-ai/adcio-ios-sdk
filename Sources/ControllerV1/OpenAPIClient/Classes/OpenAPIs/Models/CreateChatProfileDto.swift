//
// CreateChatProfileDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateChatProfileDto: Codable, JSONEncodable, Hashable {

    public enum Domain: String, Codable, CaseIterable {
        case outfit = "outfit"
        case travel = "travel"
        case healthcare = "healthcare"
    }
    public enum Theme: String, Codable, CaseIterable {
        case lovely = "lovely"
        case warm = "warm"
        case cool = "cool"
        case greenish = "greenish"
        case modern = "modern"
        case simple = "simple"
    }
    public enum Language: String, Codable, CaseIterable {
        case ko = "ko"
        case en = "en"
    }
    public var imageUrl: String?
    public var name: String
    public var description: String
    public var domain: Domain?
    public var theme: Theme
    public var language: Language
    public var greetingMessage: String
    public var bottomMargin: Double?

    public init(imageUrl: String? = nil, name: String, description: String, domain: Domain? = nil, theme: Theme, language: Language, greetingMessage: String, bottomMargin: Double? = nil) {
        self.imageUrl = imageUrl
        self.name = name
        self.description = description
        self.domain = domain
        self.theme = theme
        self.language = language
        self.greetingMessage = greetingMessage
        self.bottomMargin = bottomMargin
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case imageUrl
        case name
        case description
        case domain
        case theme
        case language
        case greetingMessage
        case bottomMargin
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(imageUrl, forKey: .imageUrl)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encodeIfPresent(domain, forKey: .domain)
        try container.encode(theme, forKey: .theme)
        try container.encode(language, forKey: .language)
        try container.encode(greetingMessage, forKey: .greetingMessage)
        try container.encodeIfPresent(bottomMargin, forKey: .bottomMargin)
    }
}

