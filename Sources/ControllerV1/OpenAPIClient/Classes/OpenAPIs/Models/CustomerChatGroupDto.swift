//
// CustomerChatGroupDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CustomerChatGroupDto: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case chat = "CHAT"
        case recommend = "RECOMMEND"
        case searchItemInfo = "SEARCH_ITEM_INFO"
        case explainHistory = "EXPLAIN_HISTORY"
        case error = "ERROR"
    }
    public var id: String
    public var type: ModelType
    public var customerId: String
    public var createdAt: Date
    public var lastChatAt: Date?
    public var error: String?
    public var questions: [String]?
    public var content: String

    public init(id: String, type: ModelType, customerId: String, createdAt: Date, lastChatAt: Date? = nil, error: String? = nil, questions: [String]? = nil, content: String) {
        self.id = id
        self.type = type
        self.customerId = customerId
        self.createdAt = createdAt
        self.lastChatAt = lastChatAt
        self.error = error
        self.questions = questions
        self.content = content
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case type
        case customerId
        case createdAt
        case lastChatAt
        case error
        case questions
        case content
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(type, forKey: .type)
        try container.encode(customerId, forKey: .customerId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(lastChatAt, forKey: .lastChatAt)
        try container.encodeIfPresent(error, forKey: .error)
        try container.encodeIfPresent(questions, forKey: .questions)
        try container.encode(content, forKey: .content)
    }
}

