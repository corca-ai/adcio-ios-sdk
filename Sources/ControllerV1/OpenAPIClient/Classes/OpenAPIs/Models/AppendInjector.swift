//
// AppendInjector.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AppendInjector: Codable, JSONEncodable, Hashable {

    public var waitFor: String
    public var wrapper: String
    public var template: String?
    public var imageTemplate: String?
    public var videoTemplate: String?

    public init(waitFor: String, wrapper: String, template: String? = nil, imageTemplate: String? = nil, videoTemplate: String? = nil) {
        self.waitFor = waitFor
        self.wrapper = wrapper
        self.template = template
        self.imageTemplate = imageTemplate
        self.videoTemplate = videoTemplate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case waitFor
        case wrapper
        case template
        case imageTemplate
        case videoTemplate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(waitFor, forKey: .waitFor)
        try container.encode(wrapper, forKey: .wrapper)
        try container.encodeIfPresent(template, forKey: .template)
        try container.encodeIfPresent(imageTemplate, forKey: .imageTemplate)
        try container.encodeIfPresent(videoTemplate, forKey: .videoTemplate)
    }
}

