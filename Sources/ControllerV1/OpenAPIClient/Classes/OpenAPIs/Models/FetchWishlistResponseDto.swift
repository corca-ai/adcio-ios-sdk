//
// FetchWishlistResponseDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FetchWishlistResponseDto: Codable, JSONEncodable, Hashable {

    public var data: AnyCodable
    public var product: Product
    public var id: String
    public var wishlistId: String
    public var productId: String
    public var customerId: String
    public var clientId: String
    public var wishlistDate: Date
    public var createdAt: Date

    public init(data: AnyCodable, product: Product, id: String, wishlistId: String, productId: String, customerId: String, clientId: String, wishlistDate: Date, createdAt: Date) {
        self.data = data
        self.product = product
        self.id = id
        self.wishlistId = wishlistId
        self.productId = productId
        self.customerId = customerId
        self.clientId = clientId
        self.wishlistDate = wishlistDate
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case data
        case product
        case id
        case wishlistId
        case productId
        case customerId
        case clientId
        case wishlistDate
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(data, forKey: .data)
        try container.encode(product, forKey: .product)
        try container.encode(id, forKey: .id)
        try container.encode(wishlistId, forKey: .wishlistId)
        try container.encode(productId, forKey: .productId)
        try container.encode(customerId, forKey: .customerId)
        try container.encode(clientId, forKey: .clientId)
        try container.encode(wishlistDate, forKey: .wishlistDate)
        try container.encode(createdAt, forKey: .createdAt)
    }
}

