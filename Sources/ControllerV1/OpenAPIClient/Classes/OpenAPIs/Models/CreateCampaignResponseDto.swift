//
// CreateCampaignResponseDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateCampaignResponseDto: Codable, JSONEncodable, Hashable {

    public var adGroups: [AdGroup]
    public var id: String
    public var title: String
    public var clientId: String
    public var clickLookbackWindowDays: Double
    public var impressionLookbackWindowDays: Double?
    public var createdAt: Date
    public var updatedAt: Date
    public var deletedAt: Date?

    public init(adGroups: [AdGroup], id: String, title: String, clientId: String, clickLookbackWindowDays: Double, impressionLookbackWindowDays: Double?, createdAt: Date, updatedAt: Date, deletedAt: Date?) {
        self.adGroups = adGroups
        self.id = id
        self.title = title
        self.clientId = clientId
        self.clickLookbackWindowDays = clickLookbackWindowDays
        self.impressionLookbackWindowDays = impressionLookbackWindowDays
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.deletedAt = deletedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case adGroups
        case id
        case title
        case clientId
        case clickLookbackWindowDays
        case impressionLookbackWindowDays
        case createdAt
        case updatedAt
        case deletedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(adGroups, forKey: .adGroups)
        try container.encode(id, forKey: .id)
        try container.encode(title, forKey: .title)
        try container.encode(clientId, forKey: .clientId)
        try container.encode(clickLookbackWindowDays, forKey: .clickLookbackWindowDays)
        try container.encode(impressionLookbackWindowDays, forKey: .impressionLookbackWindowDays)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encode(deletedAt, forKey: .deletedAt)
    }
}

