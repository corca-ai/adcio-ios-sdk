//
// BudgetCharge.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BudgetCharge: Codable, JSONEncodable, Hashable {

    public enum AdsetType: String, Codable, CaseIterable {
        case grid = "GRID"
        case banner = "BANNER"
    }
    public var requestId: String
    public var adsetId: String
    public var adsetType: AdsetType
    public var campaignId: String
    public var adGroupId: String
    public var bidPrice: Double
    public var storeId: String
    public var sellerId: String
    public var advertiseTimestamp: Double
    public var actionTimestamp: Double
    public var timestamp: Double

    public init(requestId: String, adsetId: String, adsetType: AdsetType, campaignId: String, adGroupId: String, bidPrice: Double, storeId: String, sellerId: String, advertiseTimestamp: Double, actionTimestamp: Double, timestamp: Double) {
        self.requestId = requestId
        self.adsetId = adsetId
        self.adsetType = adsetType
        self.campaignId = campaignId
        self.adGroupId = adGroupId
        self.bidPrice = bidPrice
        self.storeId = storeId
        self.sellerId = sellerId
        self.advertiseTimestamp = advertiseTimestamp
        self.actionTimestamp = actionTimestamp
        self.timestamp = timestamp
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case requestId
        case adsetId
        case adsetType
        case campaignId
        case adGroupId
        case bidPrice
        case storeId
        case sellerId
        case advertiseTimestamp
        case actionTimestamp
        case timestamp
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(requestId, forKey: .requestId)
        try container.encode(adsetId, forKey: .adsetId)
        try container.encode(adsetType, forKey: .adsetType)
        try container.encode(campaignId, forKey: .campaignId)
        try container.encode(adGroupId, forKey: .adGroupId)
        try container.encode(bidPrice, forKey: .bidPrice)
        try container.encode(storeId, forKey: .storeId)
        try container.encode(sellerId, forKey: .sellerId)
        try container.encode(advertiseTimestamp, forKey: .advertiseTimestamp)
        try container.encode(actionTimestamp, forKey: .actionTimestamp)
        try container.encode(timestamp, forKey: .timestamp)
    }
}

