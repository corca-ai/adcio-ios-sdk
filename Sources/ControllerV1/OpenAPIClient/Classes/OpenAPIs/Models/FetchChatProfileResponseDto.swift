//
// FetchChatProfileResponseDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FetchChatProfileResponseDto: Codable, JSONEncodable, Hashable {

    public enum Domain: String, Codable, CaseIterable {
        case outfit = "outfit"
        case travel = "travel"
        case healthcare = "healthcare"
    }
    public enum Theme: String, Codable, CaseIterable {
        case lovely = "lovely"
        case warm = "warm"
        case cool = "cool"
        case greenish = "greenish"
        case modern = "modern"
        case simple = "simple"
    }
    public enum Language: String, Codable, CaseIterable {
        case ko = "ko"
        case en = "en"
    }
    public var id: String
    public var clientId: String
    public var imageUrl: String?
    public var name: String
    public var description: String
    public var domain: Domain
    public var theme: Theme
    public var language: Language
    public var activated: Bool
    public var greetingMessage: String
    public var bottomMargin: Double
    public var createdAt: Date
    public var client: Client

    public init(id: String, clientId: String, imageUrl: String?, name: String, description: String, domain: Domain, theme: Theme, language: Language, activated: Bool, greetingMessage: String, bottomMargin: Double, createdAt: Date, client: Client) {
        self.id = id
        self.clientId = clientId
        self.imageUrl = imageUrl
        self.name = name
        self.description = description
        self.domain = domain
        self.theme = theme
        self.language = language
        self.activated = activated
        self.greetingMessage = greetingMessage
        self.bottomMargin = bottomMargin
        self.createdAt = createdAt
        self.client = client
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case clientId
        case imageUrl
        case name
        case description
        case domain
        case theme
        case language
        case activated
        case greetingMessage
        case bottomMargin
        case createdAt
        case client
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(clientId, forKey: .clientId)
        try container.encode(imageUrl, forKey: .imageUrl)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encode(domain, forKey: .domain)
        try container.encode(theme, forKey: .theme)
        try container.encode(language, forKey: .language)
        try container.encode(activated, forKey: .activated)
        try container.encode(greetingMessage, forKey: .greetingMessage)
        try container.encode(bottomMargin, forKey: .bottomMargin)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(client, forKey: .client)
    }
}

